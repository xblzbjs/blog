<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Django on xblzbjs</title>
    <link>https://xblzbjs.cn/tags/django/</link>
    <description>Recent content in Django on xblzbjs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 13 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://xblzbjs.cn/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django｜FBVs or CBVs</title>
      <link>https://xblzbjs.cn/posts/django/djangofbvs-or-cbvs/</link>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xblzbjs.cn/posts/django/djangofbvs-or-cbvs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Django｜编码规范</title>
      <link>https://xblzbjs.cn/posts/django/django%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xblzbjs.cn/posts/django/django%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/</guid>
      <description>编码风格 Coding Style    代码可读性    6个忠告:
➤ 避免缩写变量名
➤ 写函数参数名。
➤ 解释类和方法。
➤ 对代码进行注释
➤ 将重复的代码行重构为可重用的功能或方法
➤ 保持函数和方法简短。不应该滚动阅读整个函数或方法
PEP8(Python Enhancement Proposals)    PEP8文档
PEP8中文翻译文档
Python import 格式(以Django为例)    # future from __future__ import unicode_literals # 标准包 from math import sqrt from os.path import abspath # Django from django.db import models from django.utils.translation import ugettext_lazy as _ # 第三方包 from django_extensions.db.models import TimeStampedModel # 自己写的包 from .</description>
    </item>
    
    <item>
      <title>Django｜项目布局和App设计</title>
      <link>https://xblzbjs.cn/posts/django/django%E9%A1%B9%E7%9B%AE%E5%B8%83%E5%B1%80%E5%92%8Capp%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://xblzbjs.cn/posts/django/django%E9%A1%B9%E7%9B%AE%E5%B8%83%E5%B1%80%E5%92%8Capp%E8%AE%BE%E8%AE%A1/</guid>
      <description>有许多项目模板可以启动Django项目。
  cookiecutter-django
  Django包
  项目布局    默认的项目布局和更好的项目布局    # 默认项目布局  mysite/ ├── manage.py ├── my_app │ ├── __init__.py │ ├── admin.py │ ├── apps.py │ ├── migrations │ │ └── __init__.py │ ├── models.py │ ├── tests.py │ └── views.py └── mysite ├── __init__.py ├── asgi.py ├── settings.py ├── urls.py └── wsgi.py # 更好的项目布局 &amp;lt;repository_root&amp;gt;/ ├── &amp;lt;configuration_root&amp;gt;/ ├── &amp;lt;django_project_root&amp;gt;/ 仓库根目录 repository_root    &amp;lt;repository_root&amp;gt;目录是项目的绝对根目录.</description>
    </item>
    
  </channel>
</rss>
